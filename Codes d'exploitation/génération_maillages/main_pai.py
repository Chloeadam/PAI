from ArterialTree import ArterialTree
from Editor import Editor

import pyvista as pv
import meshio # Export Fluent
import tetgen # Tetrahedral mesh



# Write hexahedral mesh + closed surface

file = "../../PAI/C0091.vtp"
tree = ArterialTree("TestPatient", "Aneurisk", file)
tree.low_sample(0.2)
tree.model_network()
tree.compute_cross_sections(24, 0.2, False)
tree.add_extensions()
tree.mesh_surface()
tree.close_surface()
surface_mesh = tree.get_surface_mesh()
surface_mesh.plot(show_edges=True)
tree.write_surface_mesh("closed_surface_mesh.vtk")

volume_mesh = tree.mesh_volume()
volume_mesh.plot(show_edges=True)
tree.write_volume_mesh("hexa_volume_mesh.vtk")
tree.write_volume_mesh("hexa_volume_mesh.msh") # Write in Fluent



# Write tetrahedral mesh from a closed triangulated surface

mesh = pv.read("closed_surface_mesh.vtk")
mesh = mesh.triangulate() # Triangulation
mesh.save("triangulated_close_surface_mesh.vtk")

tet = tetgen.TetGen(mesh)
tet.tetrahedralize(nobisect=True, quality=True, minratio=1.1, mindihedral=10) # Compute tetrahedral volume mesh
grid = tet.grid
grid.plot(show_edges=True)

grid.save("tetra_volume_mesh.vtk")
grid = meshio.read("tetra_volume_mesh.vtk")
grid.write("tetra_volume_mesh.msh")
